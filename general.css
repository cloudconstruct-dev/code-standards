@charset "UTF-8";body{position:relative;margin:0;padding:0;background-color:#f5f5f5;color:#757575;font-family:Roboto,sans-serif;-webkit-box-sizing:border-box;box-sizing:border-box}div{-webkit-box-sizing:border-box;box-sizing:border-box}.mainContent{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;-o-flex-wrap:wrap;flex-wrap:wrap;width:100%}.mainContent__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-moz-justify-content:space-between;-ms-justify-content:space-between;-o-justify-content:space-between;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;overflow:hidden;position:relative}@media only screen and (min-width:768px){.mainContent{width:70%}}.blockquote{padding:40px;margin:0 0 40px 0;line-height:26px;font-style:italic;background:#efefef}.blockquote__attribution{margin-top:20px}.topic{float:left;width:100%;padding-left:30px;padding-right:30px;padding-bottom:15px;padding-top:70px}@media only screen and (min-width:768px){.topic{padding-right:25px;padding-left:50px;padding-top:70px}}@media only screen and (min-width:1200px){.topic{padding-right:40px;padding-left:80px}}.topic__title{margin:0 0 15px 0;float:left;overflow:hidden;width:100%}@media only screen and (min-width:768px){.topic__title{margin:0 0 20px 0}}@media only screen and (min-width:992px){.topic__title{margin:0 0 30px 0}}.topic__content{float:left;width:100%}@media only screen and (min-width:992px){.topic__content{width:70%;margin-right:5%}}.topic__resources{position:relative;float:left;overflow:hidden;width:100%;background-color:#e6e6e6}@media only screen and (min-width:992px){.topic__resources{width:25%}}.topic__resourcesList{position:relative;z-index:1;margin:0 0 0 25px;padding:0;list-style-type:none}.topic__resourcesListItem{position:relative;margin-bottom:10px}@media only screen and (min-width:768px){.topic__resourcesListItem{font-size:14px;line-height:18px}}.topic__resourcesListItem:before{position:absolute;top:0;left:-25px;color:#e01932;content:'ðŸ”—'}.topic__resourcesListItem a{word-break:break-all}.topic__code{width:100%;margin:0 0 20px 0}@media only screen and (min-width:768px){.topic__code{margin:0 0 30px 0;font-size:16px}}.topic__codeSnippet{width:100%;margin:0 0 5px 0;text-align:right;font-size:14px;line-height:1}@media only screen and (min-width:768px){.topic__codeSnippet{font-size:16px}}.topic__codeWrap{width:100%;margin:0;border:2px dashed #e01932}.topic__codePre{padding:15px 20px;margin:0;width:100%;background-color:#fff;-webkit-box-sizing:border-box;box-sizing:border-box;white-space:nowrap}.topic__codeType{width:100%;margin:0;padding:0 5px;background-color:#e6e6e6;color:#1a2732}.topic__codeType p{margin:0}.topic__codeContent{width:100%;margin:0;padding:0;color:#1a2732;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:Roboto,sans-serif;font-size:14px;line-height:20px;white-space:pre-wrap}.header{position:relative;width:100%;padding:15px 0 0 0;margin-top:50px}.header__title{padding-left:30px}@media only screen and (min-width:768px){.header__title{padding-left:50px}}@media only screen and (min-width:1200px){.header__title{padding-left:80px}}.header__updated{padding-right:30px;padding-left:30px;color:#757575;font-size:14px}@media only screen and (min-width:768px){.header__updated{position:absolute;right:0;top:25px;padding-right:25px;padding-left:0;text-align:right}}@media only screen and (min-width:1200px){.header__updated{top:35px;padding-right:40px;font-size:18px}}.header__topSquare{position:absolute;top:-180px;right:-10%;z-index:-3;width:120%;height:300px;background-color:#1a2732;-webkit-transform:rotate(-8deg);transform:rotate(-8deg)}@media only screen and (min-width:992px){.header__topSquare{top:-145px}}.header__topLogo{position:fixed;top:38px;left:2px;z-index:-1;opacity:.4;height:75px;width:75px;-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}@media only screen and (min-width:768px){.header__topLogo{top:-10px;height:93px;width:93px}}@media only screen and (min-width:992px){.header__topLogo{height:120px;width:120px}}@media only screen and (min-width:768px){.header{padding:25px 0 0 0;margin-bottom:125px;margin-top:0}}@media only screen and (min-width:992px){.header{margin-bottom:175px}}@media only screen and (min-width:1200px){.header{padding:35px 0}}.footer{float:left;width:100%;padding:30px 0;margin-top:30px;background-color:#e01932;color:#fff;text-align:center}.footer p{margin-bottom:0;font-size:14px}.footer__copyright{margin-top:30px}@media only screen and (min-width:992px){.footer__copyright{margin-top:60px}}.footer a{color:#adadad}.footer__logo svg{width:70px;height:70px;margin-bottom:5px}@media only screen and (min-width:768px){.footer{margin-top:60px}}@media only screen and (min-width:992px){.footer{padding:60px 0;margin-top:120px}}.roboto-light{font-weight:300}.header__updated,.roboto-light-italic{font-weight:300;font-style:italic}.roboto-regular,h5{font-weight:400}.roboto-italic,.topic__codeSnippet{font-weight:400;font-style:italic}.roboto-bold,h1{font-weight:700}.roboto-black,h1 span{font-weight:900}.roboto-cnd-regular,h2{font-family:'Roboto Condensed',sans-serif;font-weight:400}.navigationSidebar__navListItemLink,.roboto-cnd-bold{font-family:'Roboto Condensed',sans-serif;font-weight:700}@font-face{font-family:SSGizmo;src:url(../../Fonts/ss-gizmo.eot);src:url(../../Fonts/ss-gizmo.eot?#iefix) format("embedded-opentype"),url(../../Fonts/ss-gizmo.woff) format("woff"),url(../../Fonts/ss-gizmo.ttf) format("truetype"),url(../../Fonts/ss-gizmo.svg#SSGizmo) format("svg");font-weight:400;font-style:normal}.ss-gizmo,.topic__resourcesListItem:before{font-family:SSGizmo;font-style:normal;font-weight:400;text-decoration:none;text-rendering:optimizeLegibility;white-space:nowrap;-webkit-font-feature-settings:"liga";-ms-font-feature-settings:"liga" 1;-o-font-feature-settings:"liga";font-feature-settings:"liga";-webkit-font-smoothing:antialiased}p{margin-top:0}h1{margin:0;color:#fff;font-size:18px;line-height:20px}h1 span{display:inline-block;margin-top:5px;font-size:24px}@media only screen and (min-width:768px){h1{font-size:24px;line-height:26px}h1 span{font-size:35px}}@media only screen and (min-width:992px){h1{font-size:30px;line-height:32px}h1 span{font-size:48px}}h2{margin:0;color:#e01932;font-size:28px;line-height:34px;text-transform:uppercase}@media only screen and (min-width:768px){h2{font-size:24px;line-height:30px}}@media only screen and (min-width:992px){h2{font-size:30px;line-height:36px}}@media only screen and (min-width:992px){h2{font-size:36px;line-height:44px}}h3{margin:0;color:#e01932;font-size:16px;line-height:22px;text-transform:uppercase}@media only screen and (min-width:768px){h3{font-size:18px;line-height:24px}}@media only screen and (min-width:992px){h3{font-size:21px;line-height:27px}}h4{margin:30px 0 20px;color:#1a2732;font-size:18px;line-height:26px}@media only screen and (min-width:768px){h4{margin:32px 0 24px;font-size:18px;line-height:26px}}@media only screen and (min-width:992px){h4{margin:34px 0 30px;font-size:20px;line-height:26px}}h5{position:relative;z-index:1;margin:0 0 10px 0;font-size:16px;line-height:26px}@media only screen and (min-width:992px){h5{font-size:14px;line-height:21px}}p{margin:0 0 20px 0;font-size:14px;line-height:23px}@media only screen and (min-width:768px){p{font-size:16px;line-height:26px}}ol{padding:0 0 0 15px;margin:0 0 20px 0}ol li{margin:0 0 20px 0;font-size:14px;line-height:23px}@media only screen and (min-width:768px){ol{padding:0 0 0 20px;margin:0 0 30px 0}ol li{font-size:16px;line-height:26px}}ul{padding:0 0 0 20px;margin:0 0 20px 0}ul li{margin-bottom:10px;font-size:14px;line-height:23px}ul ul{padding:0 0 0 35px;margin:0}ul ol{padding:0 0 0 35px;margin:0}@media only screen and (min-width:768px){ul{margin:0 0 30px 0}ul li{font-size:16px;line-height:26px}}a{color:#e01932;text-decoration:none}.navigationSidebar{position:relative;color:#adadad}@media only screen and (min-width:768px){.navigationSidebar{height:100vh;width:30%}}.navigationSidebar h2{margin-bottom:0;padding-right:20px;color:#1a2732}@media only screen and (min-width:992px){.navigationSidebar h2{padding-right:40px}}.navigationSidebar__nav{width:100%;text-align:right}@media only screen and (max-width:767px){.navigationSidebar__nav{position:fixed;top:0;left:0;overflow-x:hidden;overflow-y:auto;z-index:1;height:0;background-color:#e01932;-webkit-transition:all .8s ease;transition:all .8s ease}.navigationSidebar__nav .navigationSidebar__navList,.navigationSidebar__nav h2{opacity:0;-webkit-transition:all .8s ease;transition:all .8s ease}.navigationSidebar__nav.open{padding-top:65px;height:100%}.navigationSidebar__nav.open .navigationSidebar__navList,.navigationSidebar__nav.open h2{opacity:1}}@media only screen and (min-width:768px){.navigationSidebar__nav{position:fixed;top:50%;right:0;width:30%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}}.navigationSidebar__navList{padding:0;margin:0;list-style-type:none}.navigationSidebar__navListItem{padding-right:20px;margin-bottom:0}.navigationSidebar__navListItem.active .navigationSidebar__navListItemLink{color:#1a2732}@media only screen and (min-width:992px){.navigationSidebar__navListItem{padding-right:40px}}.navigationSidebar__navListItemLink{display:inline-block;padding:3px 0;color:#adadad;text-decoration:none;font-size:18px;line-height:1;text-transform:uppercase;-webkit-transition:all .2s ease;transition:all .2s ease}.navigationSidebar__navListItemLink:active,.navigationSidebar__navListItemLink:focus,.navigationSidebar__navListItemLink:hover{color:#1a2732}@media only screen and (min-width:768px){.navigationSidebar__navListItemLink{font-size:16px}}@media only screen and (min-width:992px){.navigationSidebar__navListItemLink{padding:4px 0;font-size:20px}}@media only screen and (min-width:1200px){.navigationSidebar__navListItemLink{padding:3px 0;font-size:23px}}@media only screen and (min-width:1600px){.navigationSidebar__navListItemLink{font-size:26px}}.navigationSidebar__logo{display:none}@media only screen and (min-width:768px){.navigationSidebar__logo{position:fixed;top:0;right:20px;display:block;margin-top:10px;height:9vh;width:30%;text-align:right}.navigationSidebar__logo svg{height:100%;width:auto}}@media only screen and (min-width:992px){.navigationSidebar__logo{right:40px}}@media only screen and (min-width:1200px){.navigationSidebar__logo{top:35px}}.navigationSidebar__navSquare{display:none}@media only screen and (min-width:768px){.navigationSidebar__navSquare{position:absolute;top:37px;right:-112px;z-index:-3;display:block;width:300px;height:300px;background-color:#e01932;-webkit-transform:rotate(30deg);transform:rotate(30deg)}}@media only screen and (min-width:992px){.navigationSidebar__navSquare{top:75px;right:-160px;width:400px;height:400px}}@media only screen and (min-width:1200px){.navigationSidebar__navSquare{top:60px;right:-165px;width:450px;height:450px}}@media only screen and (min-width:1600px){.navigationSidebar__navSquare{right:-165px;width:450px;height:450px}}.navigationSidebar__toggleLogo{position:absolute;top:10px;right:20px}.navigationSidebar__toggleLogo svg{height:30px;width:30px}.navigationSidebar__toggle{position:fixed;top:0;left:0;z-index:2;width:100%;height:50px;background-color:#e01932}@media only screen and (min-width:768px){.navigationSidebar__toggle{display:none}}.navigationSidebar__toggle span{display:block;background:#fff;border-radius:2px;-webkit-transition:.25s ease-in-out;transition:.25s ease-in-out;-webkit-box-sizing:border-box;box-sizing:border-box}.navigationSidebar__toggle #menu-toggle{width:50px;height:50px;margin:0 auto;position:relative;cursor:pointer}.navigationSidebar__toggle #menu-toggle #hamburger{position:absolute;height:100%;width:100%}.navigationSidebar__toggle #menu-toggle #hamburger span{width:50px;height:4px;position:relative;top:3px;left:0;margin:8px 0}.navigationSidebar__toggle #menu-toggle #hamburger span:nth-child(1){-webkit-transition-delay:.5s;transition-delay:.5s}.navigationSidebar__toggle #menu-toggle #hamburger span:nth-child(2){-webkit-transition-delay:625ms;transition-delay:625ms}.navigationSidebar__toggle #menu-toggle #hamburger span:nth-child(3){-webkit-transition-delay:.75s;transition-delay:.75s}.navigationSidebar__toggle #menu-toggle #cross{position:absolute;height:100%;width:100%;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.navigationSidebar__toggle #menu-toggle #cross span:nth-child(1){height:0%;width:4px;position:absolute;top:10%;left:23px;-webkit-transition-delay:0s;transition-delay:0s}.navigationSidebar__toggle #menu-toggle #cross span:nth-child(2){width:0%;height:4px;position:absolute;left:10%;top:23px;-webkit-transition-delay:.25s;transition-delay:.25s}.navigationSidebar__toggle #menu-toggle.open #hamburger span{width:0%}.navigationSidebar__toggle #menu-toggle.open #hamburger span:nth-child(1){-webkit-transition-delay:0s;transition-delay:0s}.navigationSidebar__toggle #menu-toggle.open #hamburger span:nth-child(2){-webkit-transition-delay:125ms;transition-delay:125ms}.navigationSidebar__toggle #menu-toggle.open #hamburger span:nth-child(3){-webkit-transition-delay:.25s;transition-delay:.25s}.navigationSidebar__toggle #menu-toggle.open #cross span:nth-child(1){height:80%;-webkit-transition-delay:625ms;transition-delay:625ms}.navigationSidebar__toggle #menu-toggle.open #cross span:nth-child(2){width:80%;-webkit-transition-delay:375ms;transition-delay:375ms}.topic__title h2{-webkit-transform:translateY(100%);transform:translateY(100%);-webkit-transition:all .6s ease .4s;transition:all .6s ease .4s}.topic__content{opacity:0;-webkit-transform:translateY(50px);transform:translateY(50px);-webkit-transition:all .6s ease .6s;transition:all .6s ease .6s}.topic__resources{padding:0 15px;max-height:0;-webkit-transition:all .6s ease 1s;transition:all .6s ease 1s}.topic.already-visible .topic__title h2,.topic.come-in .topic__title h2{-webkit-transform:translateY(0);transform:translateY(0)}.topic.already-visible .topic__content,.topic.come-in .topic__content{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}.topic.already-visible .topic__resources,.topic.come-in .topic__resources{max-height:100%;padding:15px}.navigationSidebar__nav h2{-webkit-transform:translateX(100%);transform:translateX(100%);-webkit-transition:all .8s ease .3s;transition:all .8s ease .3s}.navigationSidebar__navListItem{-webkit-transform:translateX(100%);transform:translateX(100%);-webkit-transition:all .8s ease;transition:all .8s ease}.navigationSidebar__navListItem:nth-child(1){-webkit-transition-delay:1s;transition-delay:1s}.navigationSidebar__navListItem:nth-child(2){-webkit-transition-delay:1.05s;transition-delay:1.05s}.navigationSidebar__navListItem:nth-child(3){-webkit-transition-delay:1.1s;transition-delay:1.1s}.navigationSidebar__navListItem:nth-child(4){-webkit-transition-delay:1.15s;transition-delay:1.15s}.navigationSidebar__navListItem:nth-child(5){-webkit-transition-delay:1.2s;transition-delay:1.2s}.navigationSidebar__navListItem:nth-child(6){-webkit-transition-delay:1.25s;transition-delay:1.25s}.navigationSidebar__navListItem:nth-child(7){-webkit-transition-delay:1.3s;transition-delay:1.3s}.navigationSidebar__navListItem:nth-child(8){-webkit-transition-delay:1.35s;transition-delay:1.35s}.navigationSidebar__navListItem:nth-child(9){-webkit-transition-delay:1.4s;transition-delay:1.4s}.navigationSidebar__navListItem:nth-child(10){-webkit-transition-delay:1.45s;transition-delay:1.45s}.navigationSidebar__navListItem:nth-child(11){-webkit-transition-delay:1.5s;transition-delay:1.5s}.navigationSidebar__navListItem:nth-child(12){-webkit-transition-delay:1.55s;transition-delay:1.55s}.navigationSidebar__navListItem:nth-child(13){-webkit-transition-delay:1.6s;transition-delay:1.6s}.navigationSidebar__navListItem:nth-child(14){-webkit-transition-delay:1.65s;transition-delay:1.65s}.navigationSidebar__navListItem:nth-child(15){-webkit-transition-delay:1.7s;transition-delay:1.7s}.navigationSidebar__navListItem:nth-child(16){-webkit-transition-delay:1.75s;transition-delay:1.75s}.navigationSidebar__navListItem:nth-child(17){-webkit-transition-delay:1.8s;transition-delay:1.8s}.navigationSidebar__navListItem:nth-child(18){-webkit-transition-delay:1.85s;transition-delay:1.85s}.navigationSidebar__navListItem:nth-child(19){-webkit-transition-delay:1.9s;transition-delay:1.9s}.navigationSidebar__navListItem:nth-child(20){-webkit-transition-delay:1.95s;transition-delay:1.95s}.navigationSidebar__navListItem:nth-child(21){-webkit-transition-delay:2s;transition-delay:2s}.navigationSidebar__navListItem:nth-child(22){-webkit-transition-delay:2.05s;transition-delay:2.05s}.navigationSidebar__navListItem:nth-child(23){-webkit-transition-delay:2.1s;transition-delay:2.1s}.navigationSidebar__navListItem:nth-child(24){-webkit-transition-delay:2.15s;transition-delay:2.15s}.navigationSidebar__navListItem:nth-child(25){-webkit-transition-delay:2.2s;transition-delay:2.2s}.navigationSidebar__navSquare{-webkit-transform:translateX(100%) rotate(30deg);transform:translateX(100%) rotate(30deg);-webkit-transition:all .8s ease;transition:all .8s ease}.navigationSidebar__nav.already-visible h2,.navigationSidebar__nav.come-in h2{-webkit-transform:translateX(0);transform:translateX(0)}.navigationSidebar__nav.already-visible .navigationSidebar__navListItem,.navigationSidebar__nav.come-in .navigationSidebar__navListItem{-webkit-transform:translateX(0);transform:translateX(0)}.navigationSidebar__nav.already-visible .navigationSidebar__navSquare,.navigationSidebar__nav.come-in .navigationSidebar__navSquare{-webkit-transform:translateX(0) rotate(30deg);transform:translateX(0) rotate(30deg)}.header__topSquare{-webkit-transform:translateY(-100%) rotate(-8deg);transform:translateY(-100%) rotate(-8deg);-webkit-transition:all .8s ease;transition:all .8s ease}.header__title,.header__updated{-webkit-transform:translateY(-100%);transform:translateY(-100%);-webkit-transition:all .8s ease .6s;transition:all .8s ease .6s;opacity:0}.header.already-visible .header__topSquare,.header.come-in .header__topSquare{-webkit-transform:translateY(0) rotate(-8deg);transform:translateY(0) rotate(-8deg)}.header.already-visible .header__title,.header.already-visible .header__updated,.header.come-in .header__title,.header.come-in .header__updated{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}.navigationSidebar__toggle{-webkit-transform:translateY(-100%);transform:translateY(-100%);-webkit-transition:all .8s ease .8s;transition:all .8s ease .8s}.navigationSidebar__toggle.already-visible,.navigationSidebar__toggle.come-in{-webkit-transform:translateY(0);transform:translateY(0)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
